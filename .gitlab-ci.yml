stages:
  - build
  - test
  - quality
  - deploy

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - junit.xml
    - coverage.xml

django-test:
  stage: test
  image: python:alpine
  script:
    - apk add gcc libc-dev postgresql-dev
    - pip install pytest
    - pip install coverage
    - pip install -r requirements.txt
    - pip install -r requirements-test.txt || echo "No specific test requirements.txt"
    - coverage run $(which pytest) --junit-xml=junit.xml
    - coverage xml

sonarqube-check:
  stage: quality
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - master
    - develop
